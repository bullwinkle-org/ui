(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{1172:function(module,exports,__webpack_require__){"use strict";__webpack_require__(7),__webpack_require__(74),__webpack_require__(59),__webpack_require__(50),__webpack_require__(61),__webpack_require__(1173),__webpack_require__(1174),__webpack_require__(15),__webpack_require__(60);var _clientApi=__webpack_require__(67),_clientLogger=__webpack_require__(46),_configFilename=__webpack_require__(1185);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),_configFilename.loaders&&_configFilename.loaders.forEach((function(loader){return(0,_clientApi.addLoader)(loader,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1177:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(440).configure)([__webpack_require__(1178),__webpack_require__(1179)],module,!1)}).call(this,__webpack_require__(109)(module))},1178:function(module,exports,__webpack_require__){var map={"./examples/components/layout-builder/layout-builder.component.stories.ts":553,"./examples/components/ng-pipe-tester/ng-pipe-tester.component.stories.ts":554,"./forms/components/form-field/form-field.component.stories.ts":550,"./forms/components/input/input.component.stories.ts":551,"./shared/components/button/button.component.stories.ts":552};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1178},1179:function(module,exports,__webpack_require__){var map={"./examples/components/layout-builder/layout-builder.component.stories.ts":553,"./examples/components/ng-pipe-tester/ng-pipe-tester.component.stories.ts":554,"./forms/components/form-field/form-field.component.stories.ts":550,"./forms/components/input/input.component.stories.ts":551,"./shared/components/button/button.component.stories.ts":552};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1179},1180:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(568),_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_cjs_js_ref_9_1_node_modules_postcss_loader_dist_cjs_js_ref_9_2_node_modules_resolve_url_loader_index_js_ref_9_3_node_modules_sass_loader_dist_cjs_js_ref_9_4_styles_scss__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(395),options={insert:"head",singleton:!1};_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_ref_9_1_node_modules_postcss_loader_dist_cjs_js_ref_9_2_node_modules_resolve_url_loader_index_js_ref_9_3_node_modules_sass_loader_dist_cjs_js_ref_9_4_styles_scss__WEBPACK_IMPORTED_MODULE_1__.a,options);__webpack_exports__.default=_node_modules_css_loader_dist_cjs_js_ref_9_1_node_modules_postcss_loader_dist_cjs_js_ref_9_2_node_modules_resolve_url_loader_index_js_ref_9_3_node_modules_sass_loader_dist_cjs_js_ref_9_4_styles_scss__WEBPACK_IMPORTED_MODULE_1__.a.locals||{}},1185:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters})),__webpack_require__.d(__webpack_exports__,"globalTypes",(function(){return globalTypes})),__webpack_require__.d(__webpack_exports__,"decorators",(function(){return decorators}));var angular=__webpack_require__(563),preview=__webpack_require__(564),documentation=__webpack_require__(565),dist=__webpack_require__(13),create=__webpack_require__(394),company_logo=__webpack_require__(566);const brandBlock={brandTitle:"Bullwinkle`s storybook",brandUrl:"/",brandImage:__webpack_require__.n(company_logo).a},lightCustom=Object(create.create)(Object.assign({base:"light",colorPrimary:"#17006d",colorSecondary:"deepskyblue",appBg:"white",appContentBg:"silver",appBorderColor:"grey",appBorderRadius:4,fontBase:'"Open Sans", sans-serif',fontCode:"monospace",textColor:"black",textInverseColor:"rgba(255,255,255,0.9)",barTextColor:"silver",barSelectedColor:"black",barBg:"#17006d",inputBg:"white",inputBorder:"silver",inputTextColor:"black",inputBorderRadius:4},brandBlock)),darkCustom=Object(create.create)(Object.assign({base:"dark",colorPrimary:"#17006d",colorSecondary:"deepskyblue",appBorderRadius:4,fontBase:'"Open Sans", sans-serif',fontCode:"monospace",barBg:"#17006d",inputBorderRadius:4},brandBlock)),themes=Object.assign(Object.assign({},dist.themes),{custom:lightCustom,darkCustom:darkCustom});Object(angular.setCompodocJson)(documentation);const parameters={actions:{argTypesRegex:"^on[A-Z].*"},controls:{expanded:!0},backgrounds:{values:[{name:"light",value:"#F8F8F8"},{name:"normal",value:"#999"},{name:"dark",value:"#333333"}],defaultValue:"#888"},viewport:{viewports:preview.INITIAL_VIEWPORTS},layout:"fullscreen",docs:{theme:themes.darkCustom},options:{storySort:{method:"alphabetical",order:["Welcome","Forms","Navigation","Interactions","Blocks","Layout","Pages"]}},a11y:{element:"#root",config:{},options:{},manual:!0}},globalTypes={theme:{name:"Theme",description:"Global theme for components",defaultValue:"dark",toolbar:{icon:"circlehollow",items:["light","normal","dark"]}},locale:{name:"Locale",description:"Internationalization locale",defaultValue:"en",toolbar:{icon:"globe",items:[{value:"en",right:"ðŸ‡ºðŸ‡¸",title:"English"},{value:"fr",right:"ðŸ‡«ðŸ‡·",title:"FranÃ§ais"},{value:"es",right:"ðŸ‡ªðŸ‡¸",title:"EspaÃ±ol"},{value:"zh",right:"ðŸ‡¨ðŸ‡³",title:"ä¸­æ–‡"},{value:"kr",right:"ðŸ‡°ðŸ‡·",title:"í•œêµ­ì–´"}]}}},decorators=[storyFunc=>{const story=storyFunc(),{template:template}=story;return template?Object.assign(Object.assign({},story),{template:`<div class='fortress-story-global-wrapper'>${template}</div>`}):story}]},213:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return FormFieldComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(43),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let FormFieldComponent=class FormFieldComponent{constructor(){}ngOnInit(){}};FormFieldComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"dimaha-form-field",template:(__webpack_require__(260).default||__webpack_require__(260)).length?__webpack_require__(260).default||__webpack_require__(260):"",styles:[(__webpack_require__(261).default||__webpack_require__(261)).length?__webpack_require__(261).default||__webpack_require__(261):""],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[])],FormFieldComponent)},214:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return InputComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(43),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0);let InputComponent=class InputComponent{constructor(){}ngOnInit(){}};InputComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"dimaha-input",template:(__webpack_require__(262).default||__webpack_require__(262)).length?__webpack_require__(262).default||__webpack_require__(262):"",styles:[(__webpack_require__(263).default||__webpack_require__(263)).length?__webpack_require__(263).default||__webpack_require__(263):""],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[])],InputComponent)},256:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<p>layout-builder works!</p>\n<p>layout-builder works!</p>\n<p>layout-builder works!</p>\n<p>layout-builder works!</p>\n<p>layout-builder works!</p>\n"},257:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},258:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<p>ng-pipe-tester works!</p>\n"},259:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=":host {\n  display: block;\n}"},260:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<p>form-field works!</p>\n"},261:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},262:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<p>input works!</p>\n"},263:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},264:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<p>button works!</p>\n"},265:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},266:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<p>file-picker works!</p>\n"},267:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=""},395:function(module,__webpack_exports__,__webpack_require__){"use strict";var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(569),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__)()(!1);___CSS_LOADER_EXPORT___.push([module.i,"/* You can add global styles to this file, and also import other style files */",""]),__webpack_exports__.a=___CSS_LOADER_EXPORT___},492:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=492},550:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"primary",(function(){return primary}));var _form_field_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(213);__webpack_exports__.default={parameters:{storySource:{source:"\nimport { FormFieldComponent } from './form-field.component';\n\nexport default {\n  title: 'FormFieldComponent',\n};\n\nexport const primary = () => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: FormFieldComponent,\n  props: {\n  },\n});\n",locationsMap:{primary:{startLoc:{col:23,line:8},endLoc:{col:2,line:15},startBody:{col:23,line:8},endBody:{col:2,line:15}}}}},title:"FormFieldComponent"};const primary=()=>({moduleMetadata:{imports:[]},component:_form_field_component__WEBPACK_IMPORTED_MODULE_0__.a,props:{}});primary.parameters=Object.assign({storySource:{source:"() => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: FormFieldComponent,\n  props: {\n  },\n})"}},primary.parameters)},551:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"primary",(function(){return primary}));var _input_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(214);__webpack_exports__.default={parameters:{storySource:{source:"\nimport { InputComponent } from './input.component';\n\nexport default {\n  title: 'InputComponent',\n};\n\nexport const primary = () => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: InputComponent,\n  props: {\n  },\n});\n",locationsMap:{primary:{startLoc:{col:23,line:8},endLoc:{col:2,line:15},startBody:{col:23,line:8},endBody:{col:2,line:15}}}}},title:"InputComponent"};const primary=()=>({moduleMetadata:{imports:[]},component:_input_component__WEBPACK_IMPORTED_MODULE_0__.a,props:{}});primary.parameters=Object.assign({storySource:{source:"() => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: InputComponent,\n  props: {\n  },\n})"}},primary.parameters)},552:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"primary",(function(){return primary}));var tslib_es6=__webpack_require__(43),core=__webpack_require__(0),fesm2015_forms=__webpack_require__(282),common=__webpack_require__(20),animations=__webpack_require__(567);let ButtonComponent=class ButtonComponent{constructor(){}ngOnInit(){}};ButtonComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"dimaha-button",template:(__webpack_require__(264).default||__webpack_require__(264)).length?__webpack_require__(264).default||__webpack_require__(264):"",styles:[(__webpack_require__(265).default||__webpack_require__(265)).length?__webpack_require__(265).default||__webpack_require__(265):""],changeDetection:core.ChangeDetectionStrategy.OnPush}),Object(tslib_es6.b)("design:paramtypes",[])],ButtonComponent);let SharedUIModule=class SharedUIModule{};SharedUIModule=Object(tslib_es6.a)([Object(core.NgModule)({imports:[],declarations:[ButtonComponent],exports:[common.a,animations.a,ButtonComponent]})],SharedUIModule);let FilePickerComponent=class FilePickerComponent{constructor(){}ngOnInit(){}};FilePickerComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"dimaha-file-picker",template:(__webpack_require__(266).default||__webpack_require__(266)).length?__webpack_require__(266).default||__webpack_require__(266):"",styles:[(__webpack_require__(267).default||__webpack_require__(267)).length?__webpack_require__(267).default||__webpack_require__(267):""],changeDetection:core.ChangeDetectionStrategy.OnPush}),Object(tslib_es6.b)("design:paramtypes",[])],FilePickerComponent);var form_field_component=__webpack_require__(213),input_component=__webpack_require__(214);let FormsUIModule=class FormsUIModule{};FormsUIModule=Object(tslib_es6.a)([Object(core.NgModule)({imports:[SharedUIModule,fesm2015_forms.FormsModule,fesm2015_forms.ReactiveFormsModule],declarations:[input_component.a,form_field_component.a,FilePickerComponent],exports:[input_component.a,form_field_component.a,FilePickerComponent]})],FormsUIModule);let PipesUIModule=class PipesUIModule{};PipesUIModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[],imports:[]})],PipesUIModule);let UiModule=class UiModule{};UiModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[],exports:[SharedUIModule,FormsUIModule,PipesUIModule],imports:[SharedUIModule,FormsUIModule,PipesUIModule]})],UiModule);__webpack_exports__.default={parameters:{storySource:{source:"import { Meta } from '@storybook/angular';\nimport { UiModule } from '../../../ui.module';\nimport { ButtonComponent } from './button.component';\n\nexport default {\n  title: 'ButtonComponent',\n  component: ButtonComponent,\n  //parameters: { docs: { source: { type: 'code' } } },\n} as Meta;\n\nexport const primary = () => ({\n  moduleMetadata: {\n    imports: [UiModule],\n  },\n  template: `\n    <h1>h1i</h1>\n    <dimaha-button></dimaha-button>\n  `,\n  props: {},\n});\n",locationsMap:{primary:{startLoc:{col:23,line:11},endLoc:{col:2,line:20},startBody:{col:23,line:11},endBody:{col:2,line:20}}}}},title:"ButtonComponent",component:ButtonComponent};const primary=()=>({moduleMetadata:{imports:[UiModule]},template:"\n    <h1>h1i</h1>\n    <dimaha-button></dimaha-button>\n  ",props:{}});primary.parameters=Object.assign({storySource:{source:"() => ({\n  moduleMetadata: {\n    imports: [UiModule],\n  },\n  template: `\n    <h1>h1i</h1>\n    <dimaha-button></dimaha-button>\n  `,\n  props: {},\n})"}},primary.parameters)},553:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"primary",(function(){return primary}));var tslib_es6=__webpack_require__(43),core=__webpack_require__(0);let LayoutBuilderComponent=class LayoutBuilderComponent{constructor(){}ngOnInit(){}};LayoutBuilderComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"dimaha-layout-builder",template:(__webpack_require__(256).default||__webpack_require__(256)).length?__webpack_require__(256).default||__webpack_require__(256):"",styles:[(__webpack_require__(257).default||__webpack_require__(257)).length?__webpack_require__(257).default||__webpack_require__(257):""],changeDetection:core.ChangeDetectionStrategy.OnPush}),Object(tslib_es6.b)("design:paramtypes",[])],LayoutBuilderComponent);__webpack_exports__.default={parameters:{storySource:{source:"import { LayoutBuilderComponent } from './layout-builder.component';\n\nexport default {\n  title: 'LayoutBuilderComponent',\n};\n\nexport const primary = () => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: LayoutBuilderComponent,\n  props: {},\n});\n",locationsMap:{primary:{startLoc:{col:23,line:7},endLoc:{col:2,line:13},startBody:{col:23,line:7},endBody:{col:2,line:13}}}}},title:"LayoutBuilderComponent"};const primary=()=>({moduleMetadata:{imports:[]},component:LayoutBuilderComponent,props:{}});primary.parameters=Object.assign({storySource:{source:"() => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: LayoutBuilderComponent,\n  props: {},\n})"}},primary.parameters)},554:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"primary",(function(){return primary}));var tslib_es6=__webpack_require__(43),core=__webpack_require__(0);let NgPipeTesterComponent=class NgPipeTesterComponent{constructor(){}ngOnInit(){}};NgPipeTesterComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"dimaha-ng-pipe-tester",template:(__webpack_require__(258).default||__webpack_require__(258)).length?__webpack_require__(258).default||__webpack_require__(258):"",styles:[(__webpack_require__(259).default||__webpack_require__(259)).length?__webpack_require__(259).default||__webpack_require__(259):""],changeDetection:core.ChangeDetectionStrategy.OnPush}),Object(tslib_es6.b)("design:paramtypes",[])],NgPipeTesterComponent);__webpack_exports__.default={parameters:{storySource:{source:"import { NgPipeTesterComponent } from './ng-pipe-tester.component';\n\nexport default {\n  title: 'NgPipeTesterComponent',\n};\n\nexport const primary = () => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: NgPipeTesterComponent,\n  props: {},\n});\n",locationsMap:{primary:{startLoc:{col:23,line:7},endLoc:{col:2,line:13},startBody:{col:23,line:7},endBody:{col:2,line:13}}}}},title:"NgPipeTesterComponent"};const primary=()=>({moduleMetadata:{imports:[]},component:NgPipeTesterComponent,props:{}});primary.parameters=Object.assign({storySource:{source:"() => ({\n  moduleMetadata: {\n    imports: [],\n  },\n  component: NgPipeTesterComponent,\n  props: {},\n})"}},primary.parameters)},565:function(module){module.exports=JSON.parse('{"pipes":[],"interfaces":[],"injectables":[],"classes":[],"directives":[],"components":[{"name":"ButtonComponent","id":"component-ButtonComponent-290daee7e6bfe553705cf996db7cfa16","file":"libs/ui/src/lib/shared/components/button/button.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-button","styleUrls":["./button.component.scss"],"styles":[],"templateUrl":["./button.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-button\',\\n  templateUrl: \'./button.component.html\',\\n  styleUrls: [\'./button.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class ButtonComponent implements OnInit {\\n\\n  constructor () { }\\n\\n  ngOnInit (): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./button.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<p>button works!</p>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-098b5d1907536ade83d68e2af90a89e3-1","file":"libs/ui/src/stories/Forms/components/button/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-storybook-button","styleUrls":["./button.css"],"styles":[],"template":"<button   type=\\"button\\"\\n   (click)=\\"clicked.emit($event)\\"\\n   [ngClass]=\\"classes\\"\\n   [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n >\\n   {{ label }}\\n </button>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"backgroundColor","description":"<p>What background color to use</p>\\n","line":26,"type":"string"},{"name":"label","defaultValue":"\'Button\'","description":"<p>Button contents</p>\\n","line":40},{"name":"primary","defaultValue":"false","description":"<p>Is this the principal call to action on the page?</p>\\n","line":20},{"name":"size","defaultValue":"\'medium\'","description":"<p>How large should the button be?</p>\\n","line":32,"type":"\\"small\\" | \\"medium\\" | \\"large\\""}],"outputsClass":[{"name":"clicked","defaultValue":"new EventEmitter<Event>()","description":"<p>Optional click handler</p>\\n","line":46,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-storybook-button\',\\n  template: ` <button\\n    type=\\"button\\"\\n    (click)=\\"clicked.emit($event)\\"\\n    [ngClass]=\\"classes\\"\\n    [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n  >\\n    {{ label }}\\n  </button>`,\\n  styleUrls: [\'./button.css\'],\\n})\\nexport default class ButtonComponent {\\n  /**\\n   * Is this the principal call to action on the page?\\n   */\\n  @Input()\\n  primary = false;\\n\\n  /**\\n   * What background color to use\\n   */\\n  @Input()\\n  backgroundColor?: string;\\n\\n  /**\\n   * How large should the button be?\\n   */\\n  @Input()\\n  size: \'small\' | \'medium\' | \'large\' = \'medium\';\\n\\n  /**\\n   * Button contents\\n   *\\n   * @required\\n   */\\n  @Input()\\n  label = \'Button\';\\n\\n  /**\\n   * Optional click handler\\n   */\\n  @Output()\\n  clicked = new EventEmitter<Event>();\\n\\n  public get classes (): string[] {\\n    const mode = this.primary ? \'storybook-button--primary\' : \'storybook-button--secondary\';\\n\\n    return [\'storybook-button\', `storybook-button--${this.size}`, mode];\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".storybook-button {\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n  font-weight: 700;\\n  border: 0;\\n  border-radius: 3em;\\n  cursor: pointer;\\n  display: inline-block;\\n  line-height: 1;\\n}\\n.storybook-button--primary {\\n  color: white;\\n  background-color: #1ea7fd;\\n}\\n.storybook-button--secondary {\\n  color: #333;\\n  background-color: transparent;\\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\\n}\\n.storybook-button--small {\\n  font-size: 12px;\\n  padding: 10px 16px;\\n}\\n.storybook-button--medium {\\n  font-size: 14px;\\n  padding: 11px 20px;\\n}\\n.storybook-button--large {\\n  font-size: 16px;\\n  padding: 12px 24px;\\n}\\n","styleUrl":"./button.css"}],"stylesData":"","accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"[]","returnType":"string[]","line":48}}},"isDuplicate":true,"duplicateId":1,"duplicateName":"ButtonComponent-1"},{"name":"DialogContentComponent","id":"component-DialogContentComponent-27add5ed6f57b0f24fe9f7b1ae2b9a31","file":"libs/ui/src/stories/Interactions/components/dialog/dialog-content.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"styleUrls":[],"styles":[],"template":"<h1 matDialogTitle>This is a dialog</h1>\\n<div matDialogContent>\\n  <mat-form-field>\\n    <label>\\n      This is a text box inside of a dialog.\\n      <input matInput #dialogInput>\\n    </label>\\n  </mat-form-field>\\n</div>\\n<div matDialogActions>\\n  <button mat-raised-button [matDialogClose]=\\"dialogInput.value\\">CLOSE</button>\\n</div>\\n","templateUrl":[],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"dialogRef","type":"MatDialogRef<DialogContentComponent>","optional":false,"description":"","line":21,"decorators":[{"name":"Optional","stringifiedArguments":""}],"modifierKind":[114]}],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, Optional } from \'@angular/core\';\\nimport { MatDialogRef } from \'@angular/material/dialog\';\\n\\n@Component({\\n  template: `\\n    <h1 matDialogTitle>This is a dialog</h1>\\n    <div matDialogContent>\\n      <mat-form-field>\\n        <label>\\n          This is a text box inside of a dialog.\\n          <input matInput #dialogInput>\\n        </label>\\n      </mat-form-field>\\n    </div>\\n    <div matDialogActions>\\n      <button mat-raised-button [matDialogClose]=\\"dialogInput.value\\">CLOSE</button>\\n    </div>\\n  `,\\n})\\nexport class DialogContentComponent {\\n  constructor (@Optional() public dialogRef: MatDialogRef<DialogContentComponent>) {\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":"","stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"dialogRef","type":"MatDialogRef<DialogContentComponent>"}],"line":20,"jsdoctags":[{"name":"dialogRef","type":"MatDialogRef<DialogContentComponent>","tagName":{"text":"param"}}]}},{"name":"FilePickerComponent","id":"component-FilePickerComponent-45b7add1ee8326ac370d6a50f5af0c8e","file":"libs/ui/src/lib/forms/components/file-picker/file-picker.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-file-picker","styleUrls":["./file-picker.component.scss"],"styles":[],"templateUrl":["./file-picker.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-file-picker\',\\n  templateUrl: \'./file-picker.component.html\',\\n  styleUrls: [\'./file-picker.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FilePickerComponent implements OnInit {\\n\\n  constructor () { }\\n\\n  ngOnInit (): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./file-picker.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<p>file-picker works!</p>\\n"},{"name":"FormFieldComponent","id":"component-FormFieldComponent-51c629dd1e74f9be4fdfea7e621e486c","file":"libs/ui/src/lib/forms/components/form-field/form-field.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-form-field","styleUrls":["./form-field.component.scss"],"styles":[],"templateUrl":["./form-field.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-form-field\',\\n  templateUrl: \'./form-field.component.html\',\\n  styleUrls: [\'./form-field.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class FormFieldComponent implements OnInit {\\n\\n  constructor () { }\\n\\n  ngOnInit (): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./form-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<p>form-field works!</p>\\n"},{"name":"InputComponent","id":"component-InputComponent-363577d61aa9cd642ecd0a7f8f491687","file":"libs/ui/src/lib/forms/components/input/input.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-input","styleUrls":["./input.component.scss"],"styles":[],"templateUrl":["./input.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-input\',\\n  templateUrl: \'./input.component.html\',\\n  styleUrls: [\'./input.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class InputComponent implements OnInit {\\n\\n  constructor () { }\\n\\n  ngOnInit (): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./input.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<p>input works!</p>\\n"},{"name":"LayoutBuilderComponent","id":"component-LayoutBuilderComponent-d3cd92cd7179f680f17ba63782946d14","file":"libs/ui/src/lib/examples/components/layout-builder/layout-builder.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-layout-builder","styleUrls":["./layout-builder.component.scss"],"styles":[],"templateUrl":["./layout-builder.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-layout-builder\',\\n  templateUrl: \'./layout-builder.component.html\',\\n  styleUrls: [\'./layout-builder.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class LayoutBuilderComponent implements OnInit {\\n\\n  constructor () { }\\n\\n  ngOnInit (): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./layout-builder.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<p>layout-builder works!</p>\\n<p>layout-builder works!</p>\\n<p>layout-builder works!</p>\\n<p>layout-builder works!</p>\\n<p>layout-builder works!</p>\\n"},{"name":"NgPipeTesterComponent","id":"component-NgPipeTesterComponent-636c228b30930f5c3cf4e635aeb3b56b","file":"libs/ui/src/lib/examples/components/ng-pipe-tester/ng-pipe-tester.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-ng-pipe-tester","styleUrls":["./ng-pipe-tester.component.scss"],"styles":[],"templateUrl":["./ng-pipe-tester.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":13}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { ChangeDetectionStrategy, Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-ng-pipe-tester\',\\n  templateUrl: \'./ng-pipe-tester.component.html\',\\n  styleUrls: [\'./ng-pipe-tester.component.scss\'],\\n  changeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class NgPipeTesterComponent implements OnInit {\\n\\n  constructor () { }\\n\\n  ngOnInit (): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n  display: block;\\n}\\n","styleUrl":"./ng-pipe-tester.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"implements":["OnInit"],"templateData":"<p>ng-pipe-tester works!</p>\\n"},{"name":"PageComponent","id":"component-PageComponent-3f5bb76e2f13cce07889a95e01303427","file":"libs/ui/src/stories/Pages/components/page/page.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-storybook-page","styleUrls":["./page.css"],"styles":[],"template":"<article>\\n  <storybook-header\\n    [user]=\'user\'\\n    (onLogout)=\'logout.emit($event)\'\\n    (onLogin)=\'login.emit($event)\'\\n    (onCreateAccount)=\'createAccount.emit($event)\'\\n  ></storybook-header>\\n  <section>\\n    <h2>Pages in Storybook</h2>\\n    <p>\\n      We recommend building UIs with a\\n      <a href=\'https://componentdriven.org\' target=\'_blank\' rel=\'noopener noreferrer\'>\\n        <strong>component-driven</strong>\\n      </a>\\n      process starting with atomic components and ending with pages.\\n    </p>\\n    <p>\\n      Render pages with mock data. This makes it easy to build and review page states without\\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\\n      in Storybook:\\n    </p>\\n    <ul>\\n      <li>\\n        Use a higher-level connected component. Storybook helps you compose such data from the\\n        \\"args\\" of child component stories\\n      </li>\\n      <li>\\n        Assemble data in the page component from your services. You can mock these services out\\n        using Storybook.\\n      </li>\\n    </ul>\\n    <p>\\n      Get a guided tutorial on component-driven development at\\n      <a href=\'https://www.learnstorybook.com\' target=\'_blank\' rel=\'noopener noreferrer\'>\\n        Learn Storybook\\n      </a>\\n      . Read more in the\\n      <a href=\'https://storybook.js.org/docs\' target=\'_blank\' rel=\'noopener noreferrer\'>\\n        docs\\n      </a>\\n      .\\n    </p>\\n    <div class=\'tip-wrapper\'>\\n      <span class=\'tip\'>Tip</span> Adjust the width of the canvas with the\\n      <svg width=\'10\' height=\'10\' viewBox=\'0 0 12 12\' xmlns=\'http://www.w3.org/2000/svg\'>\\n        <g fill=\'none\' fillRule=\'evenodd\'>\\n          <path\\n            d=\'M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\'\\n            id=\'a\'\\n            fill=\'#999\'\\n          />\\n        </g>\\n      </svg>\\n      Viewports addon in the toolbar\\n    </div>\\n  </section>\\n</article>","templateUrl":[],"viewProviders":[],"inputsClass":[{"name":"user","defaultValue":"null","line":67,"type":"unknown"}],"outputsClass":[{"name":"createAccount","defaultValue":"new EventEmitter<Event>()","line":76,"type":"EventEmitter"},{"name":"login","defaultValue":"new EventEmitter<Event>()","line":70,"type":"EventEmitter"},{"name":"logout","defaultValue":"new EventEmitter<Event>()","line":73,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, EventEmitter, Input, Output } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'dimaha-storybook-page\',\\n  template: `\\n    <article>\\n      <storybook-header\\n        [user]=\'user\'\\n        (onLogout)=\'logout.emit($event)\'\\n        (onLogin)=\'login.emit($event)\'\\n        (onCreateAccount)=\'createAccount.emit($event)\'\\n      ></storybook-header>\\n      <section>\\n        <h2>Pages in Storybook</h2>\\n        <p>\\n          We recommend building UIs with a\\n          <a href=\'https://componentdriven.org\' target=\'_blank\' rel=\'noopener noreferrer\'>\\n            <strong>component-driven</strong>\\n          </a>\\n          process starting with atomic components and ending with pages.\\n        </p>\\n        <p>\\n          Render pages with mock data. This makes it easy to build and review page states without\\n          needing to navigate to them in your app. Here are some handy patterns for managing page data\\n          in Storybook:\\n        </p>\\n        <ul>\\n          <li>\\n            Use a higher-level connected component. Storybook helps you compose such data from the\\n            \\"args\\" of child component stories\\n          </li>\\n          <li>\\n            Assemble data in the page component from your services. You can mock these services out\\n            using Storybook.\\n          </li>\\n        </ul>\\n        <p>\\n          Get a guided tutorial on component-driven development at\\n          <a href=\'https://www.learnstorybook.com\' target=\'_blank\' rel=\'noopener noreferrer\'>\\n            Learn Storybook\\n          </a>\\n          . Read more in the\\n          <a href=\'https://storybook.js.org/docs\' target=\'_blank\' rel=\'noopener noreferrer\'>\\n            docs\\n          </a>\\n          .\\n        </p>\\n        <div class=\'tip-wrapper\'>\\n          <span class=\'tip\'>Tip</span> Adjust the width of the canvas with the\\n          <svg width=\'10\' height=\'10\' viewBox=\'0 0 12 12\' xmlns=\'http://www.w3.org/2000/svg\'>\\n            <g fill=\'none\' fillRule=\'evenodd\'>\\n              <path\\n                d=\'M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\'\\n                id=\'a\'\\n                fill=\'#999\'\\n              />\\n            </g>\\n          </svg>\\n          Viewports addon in the toolbar\\n        </div>\\n      </section>\\n    </article>`,\\n  styleUrls: [\'./page.css\'],\\n})\\nexport default class PageComponent {\\n  @Input()\\n  user: unknown = null;\\n\\n  @Output()\\n  login = new EventEmitter<Event>();\\n\\n  @Output()\\n  logout = new EventEmitter<Event>();\\n\\n  @Output()\\n  createAccount = new EventEmitter<Event>();\\n}\\n\\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\\n//   <article>\\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\\n\\n// );\\n// Page.propTypes = {\\n//   user: PropTypes.shape({}),\\n//   onLogin: PropTypes.func.isRequired,\\n//   onLogout: PropTypes.func.isRequired,\\n//   onCreateAccount: PropTypes.func.isRequired,\\n// };\\n\\n// Page.defaultProps = {\\n//   user: null,\\n// };\\n","assetsDirs":[],"styleUrlsData":[{"data":"section {\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n  font-size: 14px;\\n  line-height: 24px;\\n  padding: 48px 20px;\\n  margin: 0 auto;\\n  max-width: 600px;\\n  color: #333;\\n}\\n\\nh2 {\\n  font-weight: 900;\\n  font-size: 32px;\\n  line-height: 1;\\n  margin: 0 0 4px;\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\np {\\n  margin: 1em 0;\\n}\\n\\na {\\n  text-decoration: none;\\n  color: #1ea7fd;\\n}\\n\\nul {\\n  padding-left: 30px;\\n  margin: 1em 0;\\n}\\n\\nli {\\n  margin-bottom: 8px;\\n}\\n\\n.tip {\\n  display: inline-block;\\n  border-radius: 1em;\\n  font-size: 11px;\\n  line-height: 12px;\\n  font-weight: 700;\\n  background: #e7fdd8;\\n  color: #66bf3c;\\n  padding: 4px 12px;\\n  margin-right: 10px;\\n  vertical-align: top;\\n}\\n\\n.tip-wrapper {\\n  font-size: 13px;\\n  line-height: 20px;\\n  margin-top: 40px;\\n  margin-bottom: 40px;\\n}\\n\\n.tip-wrapper svg {\\n  display: inline-block;\\n  height: 12px;\\n  width: 12px;\\n  margin-right: 4px;\\n  vertical-align: top;\\n  margin-top: 3px;\\n}\\n\\n.tip-wrapper svg path {\\n  fill: #1ea7fd;\\n}\\n","styleUrl":"./page.css"}],"stylesData":""},{"name":"PaletteComponent","id":"component-PaletteComponent-9ef15bac2bd4b57f372bb567c8dd05ad","file":"libs/ui/src/stories/Material/components/palette/palette.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-palette","styleUrls":["./palette.component.scss"],"styles":[],"templateUrl":["./palette.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"availableColors","defaultValue":"[\\n    { name: \'none\', color: \'\' },\\n    { name: \'Primary\', color: \'primary\' },\\n    { name: \'Accent\', color: \'accent\' },\\n    { name: \'Warn\', color: \'warn\' },\\n  ]","type":"[]","optional":false,"description":"","line":60,"modifierKind":[114]},{"name":"color","type":"string","optional":false,"description":"","line":58,"modifierKind":[114]},{"name":"foods","defaultValue":"[\\n    { name: \'Pizza\', rating: \'Excellent\' },\\n    { name: \'Burritos\', rating: \'Great\' },\\n    { name: \'French fries\', rating: \'Pretty good\' },\\n  ]","type":"any[]","optional":false,"description":"","line":20},{"name":"games","defaultValue":"[\\n    { value: \'rts-0\', viewValue: \'Starcraft\' },\\n    { value: \'rpg-1\', viewValue: \'Baldur\\\\\'s Gate\' },\\n    { value: \'fps-2\', viewValue: \'Doom\' },\\n  ]","type":"[]","optional":false,"description":"","line":28,"modifierKind":[114]},{"name":"isDarkTheme","defaultValue":"false","type":"","optional":false,"description":"","line":12},{"name":"lastDialogResult","type":"string","optional":false,"description":"","line":14},{"name":"mode","type":"string","optional":false,"description":"","line":16},{"name":"progress","defaultValue":"0","type":"number","optional":false,"description":"","line":34,"modifierKind":[114]},{"name":"selectedValue","type":"string","optional":false,"description":"","line":26,"modifierKind":[114]},{"name":"slider","defaultValue":"{\\n    \'autoTicks\': false,\\n    \'disabled\': false,\\n    \'invert\': false,\\n    \'max\': 100,\\n    \'min\': 0,\\n    \'showTicks\': false,\\n    \'step\': 1,\\n    \'thumbLabel\': false,\\n    \'value\': 0,\\n    \'vertical\': false,\\n    \'tickInterval\': 1,\\n    \'checked\': true,\\n  }","type":"object","optional":false,"description":"","line":36,"modifierKind":[114]},{"name":"tiles","defaultValue":"[\\n    { text: \'One\', cols: 3, rows: 1, color: \'lightblue\' },\\n    { text: \'Two\', cols: 1, rows: 2, color: \'lightgreen\' },\\n    { text: \'Three\', cols: 1, rows: 1, color: \'lightpink\' },\\n    { text: \'Four\', cols: 2, rows: 1, color: \'#DDBDF1\' },\\n  ]","type":"[]","optional":false,"description":"","line":51,"modifierKind":[114]},{"name":"value","type":"number","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82},{"name":"openDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85},{"name":"showSnackbar","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { MatSnackBar } from \'@angular/material/snack-bar\';\\nimport { DialogContentComponent } from \'../../../Interactions/components/dialog/dialog-content.component\';\\n\\n@Component({\\n  selector: \'dimaha-palette\',\\n  templateUrl: \'./palette.component.html\',\\n  styleUrls: [\'./palette.component.scss\'],\\n})\\nexport class PaletteComponent implements OnInit {\\n  isDarkTheme = false;\\n\\n  lastDialogResult: string;\\n\\n  mode: string;\\n\\n  value: number;\\n\\n  foods: any[] = [\\n    { name: \'Pizza\', rating: \'Excellent\' },\\n    { name: \'Burritos\', rating: \'Great\' },\\n    { name: \'French fries\', rating: \'Pretty good\' },\\n  ];\\n\\n  public selectedValue: string;\\n\\n  public games = [\\n    { value: \'rts-0\', viewValue: \'Starcraft\' },\\n    { value: \'rpg-1\', viewValue: \'Baldur\\\\\'s Gate\' },\\n    { value: \'fps-2\', viewValue: \'Doom\' },\\n  ];\\n\\n  public progress = 0;\\n\\n  public slider = {\\n    \'autoTicks\': false,\\n    \'disabled\': false,\\n    \'invert\': false,\\n    \'max\': 100,\\n    \'min\': 0,\\n    \'showTicks\': false,\\n    \'step\': 1,\\n    \'thumbLabel\': false,\\n    \'value\': 0,\\n    \'vertical\': false,\\n    \'tickInterval\': 1,\\n    \'checked\': true,\\n  };\\n\\n  public tiles = [\\n    { text: \'One\', cols: 3, rows: 1, color: \'lightblue\' },\\n    { text: \'Two\', cols: 1, rows: 2, color: \'lightgreen\' },\\n    { text: \'Three\', cols: 1, rows: 1, color: \'lightpink\' },\\n    { text: \'Four\', cols: 2, rows: 1, color: \'#DDBDF1\' },\\n  ];\\n\\n  public color: string;\\n\\n  public availableColors = [\\n    { name: \'none\', color: \'\' },\\n    { name: \'Primary\', color: \'primary\' },\\n    { name: \'Accent\', color: \'accent\' },\\n    { name: \'Warn\', color: \'warn\' },\\n  ];\\n\\n  constructor (private _dialog: MatDialog, private _snackbar: MatSnackBar) {\\n    // Update the value for the progress-bar on an interval.\\n    setInterval(() => {\\n      this.progress = (this.progress + Math.floor(Math.random() * 4) + 1) % 100;\\n    }, 200);\\n  }\\n\\n  get tickInterval (): number | \'auto\' {\\n    return this.slider.showTicks ? (this.slider.autoTicks ? \'auto\' : this.slider.tickInterval) : null;\\n  }\\n\\n  set tickInterval (v) {\\n    this.slider.tickInterval = Number(v);\\n  }\\n\\n  ngOnInit (): void {\\n  }\\n\\n  openDialog () {\\n    const dialogRef = this._dialog.open(DialogContentComponent);\\n\\n    dialogRef.afterClosed().subscribe(result => {\\n      this.lastDialogResult = result;\\n    });\\n  }\\n\\n  showSnackbar () {\\n    this._snackbar.open(\'YUM SNACKS\', \'CHEW\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"$rajdhani-font-path: \'~projects/frontend-theme/src/lib/assets/fonts/rajdhani\';\\n$barlow-font-path: \'~projects/frontend-theme/src/lib/assets/fonts/barlow\';\\n\\nmat-sidenav-container {\\n  &.m2story-dark {\\n    background: black;\\n  }\\n}\\n\\n.story-content {\\n  padding: 5px;\\n\\n  mat-card {\\n    margin: 5px;\\n  }\\n\\n  mat-checkbox {\\n    margin: 10px;\\n  }\\n\\n  mat-chip {\\n    max-width: 200px;\\n  }\\n}\\n\\n.story-sidenav {\\n  min-width: 200px;\\n}\\n\\n.story-toolbar-filler {\\n  flex: 1 1 auto;\\n}\\n\\n\\n.story-fab {\\n  position: fixed !important;\\n  bottom: 20px;\\n  right: 20px;\\n}\\n\\n.story-spinner {\\n  height: 30px;\\n  width: 30px;\\n  display: inline-block;\\n}\\n\\n.story-input-icon {\\n  font-size: 16px;\\n  padding: 0 5px;\\n}\\n\\n.story-menu-button {\\n  padding: 0;\\n  min-width: 50px;\\n}\\n\\n.story-button {\\n  margin: 5px;\\n}\\n\\n.story-list {\\n  border: 1px solid rgba(0,0,0,0.12);\\n}\\n\\n.story-progress {\\n  margin: 5px;\\n}\\n\\n.story-h2 {\\n  margin: 10px 0;\\n  color: rgba(0,0,0,.54);\\n}\\n\\n.story-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.story-margin {\\n  margin: 10px;\\n}\\n\\n.mat-slider-horizontal {\\n  width: 300px;\\n}\\n\\n.mat-slider-vertical {\\n  height: 300px;\\n}\\n\\n.story-sidebar-button {\\n  width: inherit;\\n}\\n\\n.story-spacer {\\n  flex: 1 1 auto;\\n}\\n","styleUrl":"./palette.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"_dialog","type":"MatDialog"},{"name":"_snackbar","type":"MatSnackBar"}],"line":65,"jsdoctags":[{"name":"_dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"_snackbar","type":"MatSnackBar","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"tickInterval":{"name":"tickInterval","setSignature":{"name":"tickInterval","type":"void","args":[{"name":"v","type":""}],"returnType":"void","line":78,"jsdoctags":[{"name":"v","type":"","tagName":{"text":"param"}}]},"getSignature":{"name":"tickInterval","type":"","returnType":"number | \\"auto\\"","line":74}}},"templateData":"<mat-sidenav-container [class.m2story-dark]=\\"isDarkTheme\\">\\n\\n  <mat-sidenav #sidenav mode=\\"over\\" class=\\"story-sidenav\\" color=\\"primary\\">\\n    <mat-toolbar class=\\"mat-toolbar\\">\\n      <mat-toolbar-row>\\n        <span>Settings</span>\\n        <span class=\\"story-toolbar-filler\\"></span>\\n        <mat-icon class=\\"story-icon\\">build</mat-icon>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <button mat-button (click)=\\"isDarkTheme = !isDarkTheme\\" class=\\"story-sidebar-button\\">TOGGLE THEME</button>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <span>Account</span>\\n        <span class=\\"story-toolbar-filler\\"></span>\\n        <mat-icon class=\\"story-icon\\">account_circle</mat-icon>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <button mat-raised-button color=\\"accent\\" class=\\"story-sidebar-button\\">\\n          <mat-icon class=\\"story-icon\\">verified_user</mat-icon>\\n          Login\\n        </button>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <span>Favorites</span>\\n        <span class=\\"story-toolbar-filler\\"></span>\\n        <mat-icon class=\\"story-icon\\">favorite</mat-icon>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <button mat-raised-button color=\\"warn\\" class=\\"story-sidebar-button\\">\\n          <mat-icon class=\\"story-icon\\">delete</mat-icon>\\n          Delete\\n        </button>\\n      </mat-toolbar-row>\\n\\n    </mat-toolbar>\\n  </mat-sidenav>\\n\\n  <mat-toolbar color=\\"primary\\" class=\\"mat-toolbar\\">\\n    <button mat-button class=\\"mat-button story-menu-button\\" (click)=\\"sidenav.toggle()\\">\\n      <i class=\\"material-icons\\">menu</i>\\n    </button>\\n    <span class=\\"title\\">Angular Material Demo</span>\\n  </mat-toolbar>\\n\\n  <div class=\\"story-content\\">\\n\\n    \x3c!-- Material Button --\x3e\\n\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Button</h2>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-button>Base</button>\\n          <button class=\\"story-button\\" mat-button color=\\"primary\\">Base primary</button>\\n          <button class=\\"story-button\\" mat-button color=\\"accent\\">Base accent</button>\\n          <button class=\\"story-button\\" mat-button disabled>Base disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-flat-button>Flat</button>\\n          <button class=\\"story-button\\" mat-flat-button color=\\"primary\\">Flat primary</button>\\n          <button class=\\"story-button\\" mat-flat-button color=\\"accent\\">Flat accent</button>\\n          <button class=\\"story-button\\" mat-flat-button disabled>Flat disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-stroked-button>Stroked</button>\\n          <button class=\\"story-button\\" mat-stroked-button color=\\"primary\\">Stroked primary</button>\\n          <button class=\\"story-button\\" mat-stroked-button color=\\"accent\\">Stroked accent</button>\\n          <button class=\\"story-button\\" mat-stroked-button disabled>Stroked disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-raised-button>Raised</button>\\n          <button class=\\"story-button\\" mat-raised-button color=\\"primary\\">Raised primary</button>\\n          <button class=\\"story-button\\" mat-raised-button color=\\"accent\\">Raised accent</button>\\n          <button class=\\"story-button\\" mat-raised-button disabled>Raised disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-icon-button>\\n            <mat-icon>favorite</mat-icon>\\n          </button>\\n          <button class=\\"story-button\\" mat-icon-button color=\\"primary\\">\\n            <mat-icon color=\\"primary\\">favorite</mat-icon>\\n          </button>\\n          <button class=\\"story-button\\" mat-icon-button color=\\"accent\\">\\n            <mat-icon color=\\"accent\\">favorite</mat-icon>\\n          </button>\\n          <button class=\\"story-button\\" mat-icon-button disabled>\\n            <mat-icon>favorite</mat-icon>\\n          </button>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Button --\x3e\\n\\n    \x3c!-- Material Chip List --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Chips</h2>\\n        <mat-chip-list>\\n          <mat-chip *ngFor=\\"let chipColor of availableColors\\" selected=\\"true\\" color=\\"{{chipColor.color}}\\">\\n            {{chipColor.name}}\\n          </mat-chip>\\n        </mat-chip-list>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Chip List --\x3e\\n\\n    \x3c!-- Material Checkbox --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Checkbox</h2>\\n        <mat-checkbox color=\\"warn\\">Unchecked</mat-checkbox>\\n        <mat-checkbox [checked]=\\"true\\">Checked</mat-checkbox>\\n        <mat-checkbox [indeterminate]=\\"true\\">Indeterminate</mat-checkbox>\\n        <mat-checkbox [disabled]=\\"true\\">Disabled</mat-checkbox>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Checkbox --\x3e\\n\\n    \x3c!-- Material Radio Button --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Radio Button</h2>\\n        <mat-radio-button name=\\"symbol\\">Alpha</mat-radio-button>\\n        <mat-radio-button name=\\"symbol\\">Beta</mat-radio-button>\\n        <mat-radio-button name=\\"symbol\\" disabled>Disabled</mat-radio-button>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Radio Button --\x3e\\n\\n    \x3c!-- Material Input --\x3e\\n    <mat-card class=\\"story-input-section\\">\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Input</h2>\\n        <mat-form-field>\\n          <input matInput placeholder=\\"First name\\" />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput #nickname placeholder=\\"Nickname\\" maxlength=\\"50\\" />\\n          <mat-hint align=\\"end\\">\\n            {{nickname.value.length}} / 50\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-icon matPrefix class=\\"story-input-icon\\">android</mat-icon>\\n          <input matInput placeholder=\\"Favorite phone\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n\\n          <mat-icon matPrefix class=\\"story-input-icon\\">motorcycle</mat-icon>\\n          <input matInput placeholder=\\"Motorcycle model\\">\\n        </mat-form-field>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Input --\x3e\\n\\n    \x3c!-- Material Select --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Select</h2>\\n        <mat-form-field>\\n          <mat-select placeholder=\\"Favorite game\\" [(ngModel)]=\\"selectedValue\\" name=\\"game\\">\\n            <mat-option *ngFor=\\"let game of games\\" [value]=\\"game.value\\">\\n              {{game.viewValue}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <p> Selected value: {{selectedValue}} </p>\\n\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Select --\x3e\\n\\n    \x3c!-- Material List --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material List</h2>\\n        <mat-list class=\\"story-list\\">\\n          <mat-list-item *ngFor=\\"let food of foods\\">\\n            <h3 mat-line>{{food.name}}</h3>\\n            <p mat-line class=\\"demo-secondary-text\\">{{food.rating}}</p>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material List --\x3e\\n\\n    \x3c!-- Material Grid List --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Grid List</h2>\\n        <mat-grid-list cols=\\"4\\" rowHeight=\\"100px\\">\\n          <mat-grid-tile class=\\"grid-test-1\\" *ngFor=\\"let tile of tiles\\" [colspan]=\\"tile.cols\\" [rowspan]=\\"tile.rows\\" [style.background]=\\"tile.color\\">\\n            {{tile.text}}\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Grid List --\x3e\\n\\n    \x3c!-- Material Spinner --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Progress spinner configuration</h2>\\n\\n        <section class=\\"story-section\\">\\n          <label class=\\"story-margin\\">Color:</label>\\n          <mat-radio-group [(ngModel)]=\\"color\\">\\n            <mat-radio-button class=\\"story-margin\\" value=\\"primary\\">\\n              Primary\\n            </mat-radio-button>\\n            <mat-radio-button class=\\"story-margin\\" value=\\"accent\\">\\n              Accent\\n            </mat-radio-button>\\n            <mat-radio-button class=\\"story-margin\\" value=\\"warn\\">\\n              Warn\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <label class=\\"story-margin\\">Mode:</label>\\n          <mat-radio-group [(ngModel)]=\\"mode\\">\\n            <mat-radio-button class=\\"story-margin\\" value=\\"determinate\\">\\n              Determinate\\n            </mat-radio-button>\\n            <mat-radio-button class=\\"story-margin\\" value=\\"indeterminate\\">\\n              Indeterminate\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </section>\\n\\n        <section class=\\"story-section\\" *ngIf=\\"mode === \'determinate\'\\">\\n          <label class=\\"story-margin\\">Progress:</label>\\n          <mat-slider class=\\"story-margin\\" [(ngModel)]=\\"value\\"></mat-slider>\\n        </section>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Result</h2>\\n\\n        <mat-progress-spinner class=\\"story-margin\\" [color]=\\"color\\" [mode]=\\"mode\\" [value]=\\"value\\">\\n        </mat-progress-spinner>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Spinner --\x3e\\n\\n    \x3c!-- Material Progress Bar --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Progress Bar</h2>\\n        <label>\\n          Indeterminate progress-bar\\n          <mat-progress-bar class=\\"story-progress\\" mode=\\"indeterminate\\" aria-label=\\"Indeterminate progress-bar example\\"></mat-progress-bar>\\n        </label>\\n        <label>\\n          Determinate progress bar - {{progress}}%\\n          <mat-progress-bar class=\\"story-progress\\" color=\\"accent\\" mode=\\"determinate\\" [value]=\\"progress\\" aria-label=\\"Determinate progress-bar example\\"></mat-progress-bar>\\n        </label>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Progress Bar --\x3e\\n\\n    \x3c!-- Material Tab --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Tab</h2>\\n        <mat-tab-group>\\n          <mat-tab label=\\"Air Nomads\\">\\n            <p>The Air Nomads were a civilization composed of people who practiced the art of airbending. While nomadic, Air\\n              Nomads did inhabit four major air temples, each built on remote locations, only easily reachable with flying\\n              bison. The Air Nomads were a highly spiritual group of people.</p>\\n          </mat-tab>\\n          <mat-tab label=\\"Water Tribe\\">\\n            <p>The Water Tribe is a collective term for people, some of whom practice the art of waterbending, who follow a\\n              government system in the form of a tribal chiefdom. Although members of the Water Tribe typically inhabit the\\n              polar regions, the North Pole and the South Pole, there is a small population of waterbenders who inhabit the\\n              Foggy Swamp in Earth Kingdom territory. The two main tribes are the Northern Water Tribe at the North Pole\\n              and the Southern Water Tribe at the South Pole.</p>\\n          </mat-tab>\\n          <mat-tab label=\\"Earth Kingdom\\">\\n            <p>The Earth Kingdom is a massive continent led by an earth monarch and is home to people who practice the art of\\n              earthbending. Being the largest of the four nations, it is ethnically diverse with a variance of customs and\\n              cultural traditions. The people of the Earth Kingdom are strong and persistent. The geography of the Earth\\n              Kingdom varies tremendously, ranging from wooded forests to blazing deserts, mountainous terrain, and grassy\\n              plains.\\n            </p>\\n          </mat-tab>\\n          <mat-tab label=\\"Fire Nation\\">\\n            <p>The Fire Nation is home to people who practice the art of firebending and is an absolute monarchy led by the\\n              Fire Lord. Being composed of several major islands and located on the equator, the nation is considered to\\n              be an archipelago. Its economy is the largest and most powerful in the world with a strong industrial sector\\n              and advanced technological developments. The climate is normally humid and warm which allows for a diversity\\n              of flora and fauna to thrive.</p>\\n          </mat-tab>\\n        </mat-tab-group>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Tab --\x3e\\n\\n    <mat-card>\\n      <mat-icon>build</mat-icon>\\n      <mat-icon>android</mat-icon>\\n    </mat-card>\\n\\n    \x3c!-- Material Slider --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Slider :: Configuration</h2>\\n\\n        <section class=\\"story-section\\">\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Value\\" [(ngModel)]=\\"slider.value\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Min value\\" [(ngModel)]=\\"slider.min\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Max value\\" [(ngModel)]=\\"slider.max\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Step size\\" [(ngModel)]=\\"slider.step\\">\\n          </mat-form-field>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.showTicks\\">Show ticks</mat-checkbox>\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.autoTicks\\" *ngIf=\\"slider.showTicks\\">\\n            Auto ticks\\n          </mat-checkbox>\\n          <mat-form-field class=\\"story-margin\\" *ngIf=\\"slider.showTicks && !slider.autoTicks\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Tick interval\\" [(ngModel)]=\\"slider.tickInterval\\">\\n          </mat-form-field>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.thumbLabel\\">Show thumb label</mat-checkbox>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.checked\\">Checked</mat-checkbox>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.vertical\\">Vertical</mat-checkbox>\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.invert\\">Inverted</mat-checkbox>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.disabled\\">Disabled</mat-checkbox>\\n        </section>\\n      </mat-card-content>\\n\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Slider Result</h2>\\n        <mat-slider class=\\"story-margin\\" [disabled]=\\"slider.disabled\\" [invert]=\\"slider.invert\\" [max]=\\"slider.max\\" [min]=\\"slider.min\\"\\n                    [step]=\\"slider.step\\" [thumbLabel]=\\"slider.thumbLabel\\" [tickInterval]=\\"slider.tickInterval\\" [value]=\\"slider.value\\"\\n                    [vertical]=\\"slider.vertical\\">\\n        </mat-slider>\\n      </mat-card-content>\\n\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Slider Toggle Result</h2>\\n        <mat-slide-toggle [disabled]=\\"slider.disabled\\" [checked]=\\"slider.checked\\" (change)=\\"slider.checked = !slider.checked\\">Slide me!</mat-slide-toggle>\\n      </mat-card-content>\\n\\n    </mat-card>\\n    \x3c!-- /Material Slider --\x3e\\n\\n    \x3c!-- Material Menu --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Menu</h2>\\n        <button mat-icon-button [matMenuTriggerFor]=\\"menu\\">\\n          <mat-icon>more_vert</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\"matMenu\\">\\n          <button mat-menu-item>\\n            <mat-icon>dialpad</mat-icon>\\n            <span>Redial</span>\\n          </button>\\n          <button mat-menu-item disabled>\\n            <mat-icon>voicemail</mat-icon>\\n            <span>Check voicemail</span>\\n          </button>\\n          <button mat-menu-item>\\n            <mat-icon>notifications_off</mat-icon>\\n            <span>Disable alerts</span>\\n          </button>\\n        </mat-menu>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Menu--\x3e\\n\\n    \x3c!-- Material Dialog--\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Dialog</h2>\\n        <p>Last dialog result: {{lastDialogResult}}</p>\\n        <button mat-raised-button (click)=\\"openDialog()\\">DIALOG</button>\\n        <button mat-raised-button (click)=\\"showSnackbar()\\">SNACKBAR</button>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Dialog--\x3e\\n    \x3c!-- Material Fab--\x3e\\n    <button mat-fab class=\\"story-fab\\">\\n      <mat-icon aria-label=\\"Example icon-button with a heart icon\\">favorite</mat-icon>\\n    </button>\\n    \x3c!-- /Material Fab--\x3e\\n  </div>\\n</mat-sidenav-container>\\n"},{"name":"PaletteCustomComponent","id":"component-PaletteCustomComponent-8d92bf92f68ab27f08ac710674e77a46","file":"libs/ui/src/stories/Material/components/palette-custom/palette-custom.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"dimaha-palette-custom","styleUrls":["./palette-custom.component.scss"],"styles":[],"templateUrl":["./palette-custom.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"availableColors","defaultValue":"[\\n    { name: \'none\', color: \'\' },\\n    { name: \'Primary\', color: \'primary\' },\\n    { name: \'Accent\', color: \'accent\' },\\n    { name: \'Warn\', color: \'warn\' },\\n  ]","type":"[]","optional":false,"description":"","line":60,"modifierKind":[114]},{"name":"color","type":"string","optional":false,"description":"","line":58,"modifierKind":[114]},{"name":"foods","defaultValue":"[\\n    { name: \'Pizza\', rating: \'Excellent\' },\\n    { name: \'Burritos\', rating: \'Great\' },\\n    { name: \'French fries\', rating: \'Pretty good\' },\\n  ]","type":"any[]","optional":false,"description":"","line":20},{"name":"games","defaultValue":"[\\n    { value: \'rts-0\', viewValue: \'Starcraft\' },\\n    { value: \'rpg-1\', viewValue: \'Baldur\\\\\'s Gate\' },\\n    { value: \'fps-2\', viewValue: \'Doom\' },\\n  ]","type":"[]","optional":false,"description":"","line":28,"modifierKind":[114]},{"name":"isDarkTheme","defaultValue":"false","type":"","optional":false,"description":"","line":12},{"name":"lastDialogResult","type":"string","optional":false,"description":"","line":14},{"name":"mode","type":"string","optional":false,"description":"","line":16},{"name":"progress","defaultValue":"0","type":"number","optional":false,"description":"","line":34,"modifierKind":[114]},{"name":"selectedValue","type":"string","optional":false,"description":"","line":26,"modifierKind":[114]},{"name":"slider","defaultValue":"{\\n    \'autoTicks\': false,\\n    \'disabled\': false,\\n    \'invert\': false,\\n    \'max\': 100,\\n    \'min\': 0,\\n    \'showTicks\': false,\\n    \'step\': 1,\\n    \'thumbLabel\': false,\\n    \'value\': 0,\\n    \'vertical\': false,\\n    \'tickInterval\': 1,\\n    \'checked\': true,\\n  }","type":"object","optional":false,"description":"","line":36,"modifierKind":[114]},{"name":"tiles","defaultValue":"[\\n    { text: \'One\', cols: 3, rows: 1, color: \'lightblue\' },\\n    { text: \'Two\', cols: 1, rows: 2, color: \'lightgreen\' },\\n    { text: \'Three\', cols: 1, rows: 1, color: \'lightpink\' },\\n    { text: \'Four\', cols: 2, rows: 1, color: \'#DDBDF1\' },\\n  ]","type":"[]","optional":false,"description":"","line":51,"modifierKind":[114]},{"name":"value","type":"number","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82},{"name":"openDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85},{"name":"showSnackbar","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { MatDialog } from \'@angular/material/dialog\';\\nimport { MatSnackBar } from \'@angular/material/snack-bar\';\\nimport { DialogContentComponent } from \'../../../Interactions/components/dialog/dialog-content.component\';\\n\\n@Component({\\n  selector: \'dimaha-palette-custom\',\\n  templateUrl: \'./palette-custom.component.html\',\\n  styleUrls: [\'./palette-custom.component.scss\'],\\n})\\nexport class PaletteCustomComponent implements OnInit {\\n  isDarkTheme = false;\\n\\n  lastDialogResult: string;\\n\\n  mode: string;\\n\\n  value: number;\\n\\n  foods: any[] = [\\n    { name: \'Pizza\', rating: \'Excellent\' },\\n    { name: \'Burritos\', rating: \'Great\' },\\n    { name: \'French fries\', rating: \'Pretty good\' },\\n  ];\\n\\n  public selectedValue: string;\\n\\n  public games = [\\n    { value: \'rts-0\', viewValue: \'Starcraft\' },\\n    { value: \'rpg-1\', viewValue: \'Baldur\\\\\'s Gate\' },\\n    { value: \'fps-2\', viewValue: \'Doom\' },\\n  ];\\n\\n  public progress = 0;\\n\\n  public slider = {\\n    \'autoTicks\': false,\\n    \'disabled\': false,\\n    \'invert\': false,\\n    \'max\': 100,\\n    \'min\': 0,\\n    \'showTicks\': false,\\n    \'step\': 1,\\n    \'thumbLabel\': false,\\n    \'value\': 0,\\n    \'vertical\': false,\\n    \'tickInterval\': 1,\\n    \'checked\': true,\\n  };\\n\\n  public tiles = [\\n    { text: \'One\', cols: 3, rows: 1, color: \'lightblue\' },\\n    { text: \'Two\', cols: 1, rows: 2, color: \'lightgreen\' },\\n    { text: \'Three\', cols: 1, rows: 1, color: \'lightpink\' },\\n    { text: \'Four\', cols: 2, rows: 1, color: \'#DDBDF1\' },\\n  ];\\n\\n  public color: string;\\n\\n  public availableColors = [\\n    { name: \'none\', color: \'\' },\\n    { name: \'Primary\', color: \'primary\' },\\n    { name: \'Accent\', color: \'accent\' },\\n    { name: \'Warn\', color: \'warn\' },\\n  ];\\n\\n  constructor (private _dialog: MatDialog, private _snackbar: MatSnackBar) {\\n    // Update the value for the progress-bar on an interval.\\n    setInterval(() => {\\n      this.progress = (this.progress + Math.floor(Math.random() * 4) + 1) % 100;\\n    }, 200);\\n  }\\n\\n  get tickInterval (): number | \'auto\' {\\n    return this.slider.showTicks ? (this.slider.autoTicks ? \'auto\' : this.slider.tickInterval) : null;\\n  }\\n\\n  set tickInterval (v) {\\n    this.slider.tickInterval = Number(v);\\n  }\\n\\n  ngOnInit (): void {\\n  }\\n\\n  openDialog () {\\n    const dialogRef = this._dialog.open(DialogContentComponent);\\n\\n    dialogRef.afterClosed().subscribe(result => {\\n      this.lastDialogResult = result;\\n    });\\n  }\\n\\n  showSnackbar () {\\n    this._snackbar.open(\'YUM SNACKS\', \'CHEW\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"$rajdhani-font-path: \'~projects/frontend-theme/src/lib/assets/fonts/rajdhani\';\\n$barlow-font-path: \'~projects/frontend-theme/src/lib/assets/fonts/barlow\';\\n\\nmat-sidenav-container {\\n  &.m2story-dark {\\n    background: black;\\n  }\\n}\\n\\n.story-content {\\n  padding: 5px;\\n\\n  mat-card {\\n    margin: 5px;\\n  }\\n\\n  mat-checkbox {\\n    margin: 10px;\\n  }\\n\\n  mat-chip {\\n    max-width: 200px;\\n  }\\n}\\n\\n.story-sidenav {\\n  min-width: 200px;\\n}\\n\\n.story-toolbar-filler {\\n  flex: 1 1 auto;\\n}\\n\\n\\n.story-fab {\\n  position: fixed !important;\\n  bottom: 20px;\\n  right: 20px;\\n}\\n\\n.story-spinner {\\n  height: 30px;\\n  width: 30px;\\n  display: inline-block;\\n}\\n\\n.story-input-icon {\\n  font-size: 16px;\\n  padding: 0 5px;\\n}\\n\\n.story-menu-button {\\n  padding: 0;\\n  min-width: 50px;\\n}\\n\\n.story-button {\\n  margin: 5px;\\n}\\n\\n.story-list {\\n  border: 1px solid rgba(0,0,0,0.12);\\n}\\n\\n.story-progress {\\n  margin: 5px;\\n}\\n\\n.story-h2 {\\n  margin: 10px 0;\\n  color: rgba(0,0,0,.54);\\n}\\n\\n.story-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.story-margin {\\n  margin: 10px;\\n}\\n\\n.mat-slider-horizontal {\\n  width: 300px;\\n}\\n\\n.mat-slider-vertical {\\n  height: 300px;\\n}\\n\\n.story-sidebar-button {\\n  width: inherit;\\n}\\n\\n.story-spacer {\\n  flex: 1 1 auto;\\n}\\n","styleUrl":"./palette-custom.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"_dialog","type":"MatDialog"},{"name":"_snackbar","type":"MatSnackBar"}],"line":65,"jsdoctags":[{"name":"_dialog","type":"MatDialog","tagName":{"text":"param"}},{"name":"_snackbar","type":"MatSnackBar","tagName":{"text":"param"}}]},"implements":["OnInit"],"accessors":{"tickInterval":{"name":"tickInterval","setSignature":{"name":"tickInterval","type":"void","args":[{"name":"v","type":""}],"returnType":"void","line":78,"jsdoctags":[{"name":"v","type":"","tagName":{"text":"param"}}]},"getSignature":{"name":"tickInterval","type":"","returnType":"number | \\"auto\\"","line":74}}},"templateData":"<mat-sidenav-container [class.m2story-dark]=\\"isDarkTheme\\">\\n\\n  <mat-sidenav #sidenav mode=\\"over\\" class=\\"story-sidenav\\" color=\\"primary\\">\\n    <mat-toolbar class=\\"mat-toolbar\\">\\n      <mat-toolbar-row>\\n        <span>Settings</span>\\n        <span class=\\"story-toolbar-filler\\"></span>\\n        <mat-icon class=\\"story-icon\\">build</mat-icon>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <button mat-button (click)=\\"isDarkTheme = !isDarkTheme\\" class=\\"story-sidebar-button\\">TOGGLE THEME</button>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <span>Account</span>\\n        <span class=\\"story-toolbar-filler\\"></span>\\n        <mat-icon class=\\"story-icon\\">account_circle</mat-icon>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <button mat-raised-button color=\\"accent\\" class=\\"story-sidebar-button\\">\\n          <mat-icon class=\\"story-icon\\">verified_user</mat-icon>\\n          Login\\n        </button>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <span>Favorites</span>\\n        <span class=\\"story-toolbar-filler\\"></span>\\n        <mat-icon class=\\"story-icon\\">favorite</mat-icon>\\n      </mat-toolbar-row>\\n\\n      <mat-toolbar-row>\\n        <button mat-raised-button color=\\"warn\\" class=\\"story-sidebar-button\\">\\n          <mat-icon class=\\"story-icon\\">delete</mat-icon>\\n          Delete\\n        </button>\\n      </mat-toolbar-row>\\n\\n    </mat-toolbar>\\n  </mat-sidenav>\\n\\n  <mat-toolbar color=\\"primary\\" class=\\"mat-toolbar\\">\\n    <button mat-button class=\\"mat-button story-menu-button\\" (click)=\\"sidenav.toggle()\\">\\n      <i class=\\"material-icons\\">menu</i>\\n    </button>\\n    <span class=\\"title\\">Angular Material Demo</span>\\n  </mat-toolbar>\\n\\n  <div class=\\"story-content\\">\\n\\n    \x3c!-- Material Button --\x3e\\n\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Button</h2>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-button>Base</button>\\n          <button class=\\"story-button\\" mat-button color=\\"primary\\">Base primary</button>\\n          <button class=\\"story-button\\" mat-button color=\\"accent\\">Base accent</button>\\n          <button class=\\"story-button\\" mat-button disabled>Base disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-flat-button>Flat</button>\\n          <button class=\\"story-button\\" mat-flat-button color=\\"primary\\">Flat primary</button>\\n          <button class=\\"story-button\\" mat-flat-button color=\\"accent\\">Flat accent</button>\\n          <button class=\\"story-button\\" mat-flat-button disabled>Flat disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-stroked-button>Stroked</button>\\n          <button class=\\"story-button\\" mat-stroked-button color=\\"primary\\">Stroked primary</button>\\n          <button class=\\"story-button\\" mat-stroked-button color=\\"accent\\">Stroked accent</button>\\n          <button class=\\"story-button\\" mat-stroked-button disabled>Stroked disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-raised-button>Raised</button>\\n          <button class=\\"story-button\\" mat-raised-button color=\\"primary\\">Raised primary</button>\\n          <button class=\\"story-button\\" mat-raised-button color=\\"accent\\">Raised accent</button>\\n          <button class=\\"story-button\\" mat-raised-button disabled>Raised disabled</button>\\n        </div>\\n\\n        <div>\\n          <button class=\\"story-button\\" mat-icon-button>\\n            <mat-icon>favorite</mat-icon>\\n          </button>\\n          <button class=\\"story-button\\" mat-icon-button color=\\"primary\\">\\n            <mat-icon color=\\"primary\\">favorite</mat-icon>\\n          </button>\\n          <button class=\\"story-button\\" mat-icon-button color=\\"accent\\">\\n            <mat-icon color=\\"accent\\">favorite</mat-icon>\\n          </button>\\n          <button class=\\"story-button\\" mat-icon-button disabled>\\n            <mat-icon>favorite</mat-icon>\\n          </button>\\n        </div>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Button --\x3e\\n\\n    \x3c!-- Material Chip List --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Chips</h2>\\n        <mat-chip-list>\\n          <mat-chip *ngFor=\\"let chipColor of availableColors\\" selected=\\"true\\" color=\\"{{chipColor.color}}\\">\\n            {{chipColor.name}}\\n          </mat-chip>\\n        </mat-chip-list>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Chip List --\x3e\\n\\n    \x3c!-- Material Checkbox --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Checkbox</h2>\\n        <mat-checkbox color=\\"warn\\">Unchecked</mat-checkbox>\\n        <mat-checkbox [checked]=\\"true\\">Checked</mat-checkbox>\\n        <mat-checkbox [indeterminate]=\\"true\\">Indeterminate</mat-checkbox>\\n        <mat-checkbox [disabled]=\\"true\\">Disabled</mat-checkbox>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Checkbox --\x3e\\n\\n    \x3c!-- Material Radio Button --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Radio Button</h2>\\n        <mat-radio-button name=\\"symbol\\">Alpha</mat-radio-button>\\n        <mat-radio-button name=\\"symbol\\">Beta</mat-radio-button>\\n        <mat-radio-button name=\\"symbol\\" disabled>Disabled</mat-radio-button>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Radio Button --\x3e\\n\\n    \x3c!-- Material Input --\x3e\\n    <mat-card class=\\"story-input-section\\">\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Input</h2>\\n        <mat-form-field>\\n          <input matInput placeholder=\\"First name\\" />\\n        </mat-form-field>\\n        <mat-form-field>\\n          <input matInput #nickname placeholder=\\"Nickname\\" maxlength=\\"50\\" />\\n          <mat-hint align=\\"end\\">\\n            {{nickname.value.length}} / 50\\n          </mat-hint>\\n        </mat-form-field>\\n        <mat-form-field>\\n          <mat-icon matPrefix class=\\"story-input-icon\\">android</mat-icon>\\n          <input matInput placeholder=\\"Favorite phone\\">\\n        </mat-form-field>\\n        <mat-form-field>\\n\\n          <mat-icon matPrefix class=\\"story-input-icon\\">motorcycle</mat-icon>\\n          <input matInput placeholder=\\"Motorcycle model\\">\\n        </mat-form-field>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Input --\x3e\\n\\n    \x3c!-- Material Select --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Select</h2>\\n        <mat-form-field>\\n          <mat-select placeholder=\\"Favorite game\\" [(ngModel)]=\\"selectedValue\\" name=\\"game\\">\\n            <mat-option *ngFor=\\"let game of games\\" [value]=\\"game.value\\">\\n              {{game.viewValue}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <p> Selected value: {{selectedValue}} </p>\\n\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Select --\x3e\\n\\n    \x3c!-- Material List --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material List</h2>\\n        <mat-list class=\\"story-list\\">\\n          <mat-list-item *ngFor=\\"let food of foods\\">\\n            <h3 mat-line>{{food.name}}</h3>\\n            <p mat-line class=\\"demo-secondary-text\\">{{food.rating}}</p>\\n          </mat-list-item>\\n        </mat-list>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material List --\x3e\\n\\n    \x3c!-- Material Grid List --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Grid List</h2>\\n        <mat-grid-list cols=\\"4\\" rowHeight=\\"100px\\">\\n          <mat-grid-tile class=\\"grid-test-1\\" *ngFor=\\"let tile of tiles\\" [colspan]=\\"tile.cols\\" [rowspan]=\\"tile.rows\\" [style.background]=\\"tile.color\\">\\n            {{tile.text}}\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Grid List --\x3e\\n\\n    \x3c!-- Material Spinner --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Progress spinner configuration</h2>\\n\\n        <section class=\\"story-section\\">\\n          <label class=\\"story-margin\\">Color:</label>\\n          <mat-radio-group [(ngModel)]=\\"color\\">\\n            <mat-radio-button class=\\"story-margin\\" value=\\"primary\\">\\n              Primary\\n            </mat-radio-button>\\n            <mat-radio-button class=\\"story-margin\\" value=\\"accent\\">\\n              Accent\\n            </mat-radio-button>\\n            <mat-radio-button class=\\"story-margin\\" value=\\"warn\\">\\n              Warn\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <label class=\\"story-margin\\">Mode:</label>\\n          <mat-radio-group [(ngModel)]=\\"mode\\">\\n            <mat-radio-button class=\\"story-margin\\" value=\\"determinate\\">\\n              Determinate\\n            </mat-radio-button>\\n            <mat-radio-button class=\\"story-margin\\" value=\\"indeterminate\\">\\n              Indeterminate\\n            </mat-radio-button>\\n          </mat-radio-group>\\n        </section>\\n\\n        <section class=\\"story-section\\" *ngIf=\\"mode === \'determinate\'\\">\\n          <label class=\\"story-margin\\">Progress:</label>\\n          <mat-slider class=\\"story-margin\\" [(ngModel)]=\\"value\\"></mat-slider>\\n        </section>\\n      </mat-card-content>\\n    </mat-card>\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Result</h2>\\n\\n        <mat-progress-spinner class=\\"story-margin\\" [color]=\\"color\\" [mode]=\\"mode\\" [value]=\\"value\\">\\n        </mat-progress-spinner>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Spinner --\x3e\\n\\n    \x3c!-- Material Progress Bar --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Progress Bar</h2>\\n        <label>\\n          Indeterminate progress-bar\\n          <mat-progress-bar class=\\"story-progress\\" mode=\\"indeterminate\\" aria-label=\\"Indeterminate progress-bar example\\"></mat-progress-bar>\\n        </label>\\n        <label>\\n          Determinate progress bar - {{progress}}%\\n          <mat-progress-bar class=\\"story-progress\\" color=\\"accent\\" mode=\\"determinate\\" [value]=\\"progress\\" aria-label=\\"Determinate progress-bar example\\"></mat-progress-bar>\\n        </label>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Progress Bar --\x3e\\n\\n    \x3c!-- Material Tab --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Tab</h2>\\n        <mat-tab-group>\\n          <mat-tab label=\\"Air Nomads\\">\\n            <p>The Air Nomads were a civilization composed of people who practiced the art of airbending. While nomadic, Air\\n              Nomads did inhabit four major air temples, each built on remote locations, only easily reachable with flying\\n              bison. The Air Nomads were a highly spiritual group of people.</p>\\n          </mat-tab>\\n          <mat-tab label=\\"Water Tribe\\">\\n            <p>The Water Tribe is a collective term for people, some of whom practice the art of waterbending, who follow a\\n              government system in the form of a tribal chiefdom. Although members of the Water Tribe typically inhabit the\\n              polar regions, the North Pole and the South Pole, there is a small population of waterbenders who inhabit the\\n              Foggy Swamp in Earth Kingdom territory. The two main tribes are the Northern Water Tribe at the North Pole\\n              and the Southern Water Tribe at the South Pole.</p>\\n          </mat-tab>\\n          <mat-tab label=\\"Earth Kingdom\\">\\n            <p>The Earth Kingdom is a massive continent led by an earth monarch and is home to people who practice the art of\\n              earthbending. Being the largest of the four nations, it is ethnically diverse with a variance of customs and\\n              cultural traditions. The people of the Earth Kingdom are strong and persistent. The geography of the Earth\\n              Kingdom varies tremendously, ranging from wooded forests to blazing deserts, mountainous terrain, and grassy\\n              plains.\\n            </p>\\n          </mat-tab>\\n          <mat-tab label=\\"Fire Nation\\">\\n            <p>The Fire Nation is home to people who practice the art of firebending and is an absolute monarchy led by the\\n              Fire Lord. Being composed of several major islands and located on the equator, the nation is considered to\\n              be an archipelago. Its economy is the largest and most powerful in the world with a strong industrial sector\\n              and advanced technological developments. The climate is normally humid and warm which allows for a diversity\\n              of flora and fauna to thrive.</p>\\n          </mat-tab>\\n        </mat-tab-group>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Tab --\x3e\\n\\n    <mat-card>\\n      <mat-icon>build</mat-icon>\\n      <mat-icon>android</mat-icon>\\n    </mat-card>\\n\\n    \x3c!-- Material Slider --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Slider :: Configuration</h2>\\n\\n        <section class=\\"story-section\\">\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Value\\" [(ngModel)]=\\"slider.value\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Min value\\" [(ngModel)]=\\"slider.min\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Max value\\" [(ngModel)]=\\"slider.max\\">\\n          </mat-form-field>\\n          <mat-form-field class=\\"story-margin\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Step size\\" [(ngModel)]=\\"slider.step\\">\\n          </mat-form-field>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.showTicks\\">Show ticks</mat-checkbox>\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.autoTicks\\" *ngIf=\\"slider.showTicks\\">\\n            Auto ticks\\n          </mat-checkbox>\\n          <mat-form-field class=\\"story-margin\\" *ngIf=\\"slider.showTicks && !slider.autoTicks\\">\\n            <input matInput type=\\"number\\" placeholder=\\"Tick interval\\" [(ngModel)]=\\"slider.tickInterval\\">\\n          </mat-form-field>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.thumbLabel\\">Show thumb label</mat-checkbox>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.checked\\">Checked</mat-checkbox>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.vertical\\">Vertical</mat-checkbox>\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.invert\\">Inverted</mat-checkbox>\\n        </section>\\n\\n        <section class=\\"story-section\\">\\n          <mat-checkbox class=\\"story-margin\\" [(ngModel)]=\\"slider.disabled\\">Disabled</mat-checkbox>\\n        </section>\\n      </mat-card-content>\\n\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Slider Result</h2>\\n        <mat-slider class=\\"story-margin\\" [disabled]=\\"slider.disabled\\" [invert]=\\"slider.invert\\" [max]=\\"slider.max\\" [min]=\\"slider.min\\"\\n                    [step]=\\"slider.step\\" [thumbLabel]=\\"slider.thumbLabel\\" [tickInterval]=\\"slider.tickInterval\\" [value]=\\"slider.value\\"\\n                    [vertical]=\\"slider.vertical\\">\\n        </mat-slider>\\n      </mat-card-content>\\n\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Slider Toggle Result</h2>\\n        <mat-slide-toggle [disabled]=\\"slider.disabled\\" [checked]=\\"slider.checked\\" (change)=\\"slider.checked = !slider.checked\\">Slide me!</mat-slide-toggle>\\n      </mat-card-content>\\n\\n    </mat-card>\\n    \x3c!-- /Material Slider --\x3e\\n\\n    \x3c!-- Material Menu --\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Menu</h2>\\n        <button mat-icon-button [matMenuTriggerFor]=\\"menu\\">\\n          <mat-icon>more_vert</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\"matMenu\\">\\n          <button mat-menu-item>\\n            <mat-icon>dialpad</mat-icon>\\n            <span>Redial</span>\\n          </button>\\n          <button mat-menu-item disabled>\\n            <mat-icon>voicemail</mat-icon>\\n            <span>Check voicemail</span>\\n          </button>\\n          <button mat-menu-item>\\n            <mat-icon>notifications_off</mat-icon>\\n            <span>Disable alerts</span>\\n          </button>\\n        </mat-menu>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Menu--\x3e\\n\\n    \x3c!-- Material Dialog--\x3e\\n    <mat-card>\\n      <mat-card-content>\\n        <h2 class=\\"story-h2\\">Material Dialog</h2>\\n        <p>Last dialog result: {{lastDialogResult}}</p>\\n        <button mat-raised-button (click)=\\"openDialog()\\">DIALOG</button>\\n        <button mat-raised-button (click)=\\"showSnackbar()\\">SNACKBAR</button>\\n      </mat-card-content>\\n    </mat-card>\\n    \x3c!-- /Material Dialog--\x3e\\n    \x3c!-- Material Fab--\x3e\\n    <button mat-fab class=\\"story-fab\\">\\n      <mat-icon aria-label=\\"Example icon-button with a heart icon\\">favorite</mat-icon>\\n    </button>\\n    \x3c!-- /Material Fab--\x3e\\n  </div>\\n</mat-sidenav-container>\\n"}],"modules":[{"name":"ExamplesModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"LayoutBuilderComponent"},{"name":"NgPipeTesterComponent"}]},{"type":"imports","elements":[{"name":"SharedUIModule"}]},{"type":"exports","elements":[{"name":"LayoutBuilderComponent"},{"name":"NgPipeTesterComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"FormsUIModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"FilePickerComponent"},{"name":"FormFieldComponent"},{"name":"InputComponent"}]},{"type":"imports","elements":[{"name":"SharedUIModule"}]},{"type":"exports","elements":[{"name":"FilePickerComponent"},{"name":"FormFieldComponent"},{"name":"InputComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MaterialModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DialogContentComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"PipesUIModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SharedUIModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ButtonComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"ButtonComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"UiModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"FormsUIModule"},{"name":"SharedUIModule"}]},{"type":"exports","elements":[{"name":"FormsUIModule"},{"name":"SharedUIModule"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"createStoryTemplate","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/stories/utils/index.ts","type":"","defaultValue":"<T>(templateFactory) => (\\n  args, { decorators = null, loaders = null, ...parameters }, context: Partial<StoryContext> = {},\\n): Story<T> => Object.assign(templateFactory.bind(context), {\\n  args, parameters, decorators, loaders,\\n})","description":"<p>Create story factory from {templateFactory}</p>\\n"},{"name":"getStoryTitle","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/stories/utils/index.ts","type":"","defaultValue":"(filePath: string, name = \'\', depth = 1, separator = \'/\') =>\\n  dirname(filePath)\\n    .split(separator)\\n    .slice(-depth)\\n    .concat(name)\\n    .join(separator)","description":"<p>Create story title from last {depth} {filepath} segments</p>\\n"},{"name":"importsAndExports","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/stories/Material/material.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatToolbarModule,\\n  MatChipsModule,\\n  MatOptionModule,\\n  MatGridListModule,\\n  MatSliderModule,\\n  MatSlideToggleModule,\\n  MatMenuModule,\\n  MatDialogModule,\\n  MatSnackBarModule,\\n  MatSelectModule,\\n  MatInputModule,\\n  MatSidenavModule,\\n  MatCardModule,\\n  MatIconModule,\\n  MatRadioModule,\\n  MatProgressSpinnerModule,\\n  MatProgressBarModule,\\n  MatTabsModule,\\n  MatListModule,\\n  MatTooltipModule,\\n]"}],"functions":[],"typealiases":[],"enumerations":[],"groupedVariables":{"libs/ui/src/stories/utils/index.ts":[{"name":"createStoryTemplate","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/stories/utils/index.ts","type":"","defaultValue":"<T>(templateFactory) => (\\n  args, { decorators = null, loaders = null, ...parameters }, context: Partial<StoryContext> = {},\\n): Story<T> => Object.assign(templateFactory.bind(context), {\\n  args, parameters, decorators, loaders,\\n})","description":"<p>Create story factory from {templateFactory}</p>\\n"},{"name":"getStoryTitle","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/stories/utils/index.ts","type":"","defaultValue":"(filePath: string, name = \'\', depth = 1, separator = \'/\') =>\\n  dirname(filePath)\\n    .split(separator)\\n    .slice(-depth)\\n    .concat(name)\\n    .join(separator)","description":"<p>Create story title from last {depth} {filepath} segments</p>\\n"}],"libs/ui/src/stories/Material/material.module.ts":[{"name":"importsAndExports","ctype":"miscellaneous","subtype":"variable","file":"libs/ui/src/stories/Material/material.module.ts","type":"[]","defaultValue":"[\\n  MatButtonModule,\\n  MatCheckboxModule,\\n  MatToolbarModule,\\n  MatChipsModule,\\n  MatOptionModule,\\n  MatGridListModule,\\n  MatSliderModule,\\n  MatSlideToggleModule,\\n  MatMenuModule,\\n  MatDialogModule,\\n  MatSnackBarModule,\\n  MatSelectModule,\\n  MatInputModule,\\n  MatSidenavModule,\\n  MatCardModule,\\n  MatIconModule,\\n  MatRadioModule,\\n  MatProgressSpinnerModule,\\n  MatProgressBarModule,\\n  MatTabsModule,\\n  MatListModule,\\n  MatTooltipModule,\\n]"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{}},"routes":[],"coverage":{"count":20,"status":"low","files":[{"filePath":"libs/ui/src/lib/examples/components/layout-builder/layout-builder.component.ts","type":"component","linktype":"component","name":"LayoutBuilderComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/examples/components/ng-pipe-tester/ng-pipe-tester.component.ts","type":"component","linktype":"component","name":"NgPipeTesterComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/forms/components/file-picker/file-picker.component.ts","type":"component","linktype":"component","name":"FilePickerComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/forms/components/form-field/form-field.component.ts","type":"component","linktype":"component","name":"FormFieldComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/forms/components/input/input.component.ts","type":"component","linktype":"component","name":"InputComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/lib/shared/components/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/stories/Forms/components/button/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":83,"coverageCount":"5/6","status":"very-good"},{"filePath":"libs/ui/src/stories/Interactions/components/dialog/dialog-content.component.ts","type":"component","linktype":"component","name":"DialogContentComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"libs/ui/src/stories/Material/components/palette-custom/palette-custom.component.ts","type":"component","linktype":"component","name":"PaletteCustomComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"libs/ui/src/stories/Material/components/palette/palette.component.ts","type":"component","linktype":"component","name":"PaletteComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"libs/ui/src/stories/Material/material.module.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"importsAndExports","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"libs/ui/src/stories/Pages/components/page/page.component.ts","type":"component","linktype":"component","name":"PageComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"libs/ui/src/stories/utils/index.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"createStoryTemplate","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"libs/ui/src/stories/utils/index.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getStoryTitle","coveragePercent":100,"coverageCount":"1/1","status":"very-good"}]}}')},566:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/company-logo.37b932b0.svg"},572:function(module,exports,__webpack_require__){__webpack_require__(573),__webpack_require__(734),__webpack_require__(735),__webpack_require__(916),__webpack_require__(1138),__webpack_require__(1140),__webpack_require__(1152),__webpack_require__(1154),__webpack_require__(1159),__webpack_require__(1161),__webpack_require__(1166),__webpack_require__(1169),__webpack_require__(1172),__webpack_require__(1177),module.exports=__webpack_require__(1180)},644:function(module,exports){},735:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(440)}},[[572,1,2]]]);
//# sourceMappingURL=main.083c0e67c7f2f9b9343b.bundle.js.map